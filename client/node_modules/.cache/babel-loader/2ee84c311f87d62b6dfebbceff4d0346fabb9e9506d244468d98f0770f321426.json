{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\excel\\\\client\\\\src\\\\components\\\\ChartVisualizer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChartVisualizer({\n  data\n}) {\n  _s();\n  const [xAxis, setXAxis] = useState('');\n  const [yAxis, setYAxis] = useState('');\n  const [chartType, setChartType] = useState('2d');\n  const chartRef = useRef(null);\n  const threeRef = useRef(null);\n  const chartInstance = useRef(null);\n  const threeScene = useRef(null);\n  const columns = data.length ? Object.keys(data[0]) : [];\n\n  // Clean up function to remove existing charts\n  const clearChart = () => {\n    if (chartInstance.current) {\n      chartInstance.current.destroy();\n      chartInstance.current = null;\n    }\n    if (threeScene.current) {\n      // Remove canvas for Three.js scene\n      if (threeRef.current) {\n        while (threeRef.current.firstChild) {\n          threeRef.current.removeChild(threeRef.current.firstChild);\n        }\n      }\n\n      // Dispose Three.js objects\n      if (threeScene.current.renderer) {\n        threeScene.current.renderer.dispose();\n      }\n      threeScene.current = null;\n    }\n  };\n\n  // Create 2D Chart.js chart\n  const render2DChart = () => {\n    if (!chartRef.current) return;\n    const ctx = chartRef.current.getContext('2d');\n    chartInstance.current = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: data.map(d => d[xAxis]),\n        datasets: [{\n          label: `${yAxis} vs ${xAxis}`,\n          data: data.map(d => d[yAxis]),\n          borderColor: 'rgba(37, 99, 235, 1)',\n          // Tailwind blue-600\n          backgroundColor: 'rgba(37, 99, 235, 0.2)',\n          fill: true,\n          tension: 0.3\n        }]\n      },\n      options: {\n        responsive: true,\n        interaction: {\n          mode: 'index',\n          intersect: false\n        },\n        plugins: {\n          legend: {\n            display: true\n          },\n          tooltip: {\n            enabled: true\n          }\n        },\n        scales: {\n          x: {\n            title: {\n              display: true,\n              text: xAxis\n            }\n          },\n          y: {\n            title: {\n              display: true,\n              text: yAxis\n            }\n          }\n        }\n      }\n    });\n  };\n\n  // Create basic 3D scatter plot with Three.js\n  const render3DChart = () => {\n    if (!threeRef.current) return;\n    const mount = threeRef.current;\n    const width = mount.clientWidth || 600;\n    const height = mount.clientHeight || 400;\n\n    // Scene & camera\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xf9fafb); // Tailwind gray-50\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    camera.position.z = 50;\n\n    // Renderer\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true\n    });\n    renderer.setSize(width, height);\n    mount.appendChild(renderer.domElement);\n\n    // Add points as spheres\n    data.forEach(point => {\n      const x = parseFloat(point[xAxis]);\n      const y = parseFloat(point[yAxis]);\n      if (isNaN(x) || isNaN(y)) return;\n      const geometry = new THREE.SphereGeometry(0.5, 8, 8);\n      const material = new THREE.MeshStandardMaterial({\n        color: 0x2563eb\n      }); // Tailwind blue-600\n      const sphere = new THREE.Mesh(geometry, material);\n      sphere.position.set(x, y, 0);\n      scene.add(sphere);\n    });\n\n    // Add light\n    const light = new THREE.DirectionalLight(0xffffff, 1);\n    light.position.set(10, 10, 10);\n    scene.add(light);\n\n    // Animate loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Save for cleanup\n    threeScene.current = {\n      scene,\n      camera,\n      renderer\n    };\n  };\n\n  // Effect to rerender charts on input change\n  useEffect(() => {\n    clearChart();\n    if (xAxis && yAxis) {\n      if (chartType === '2d') {\n        render2DChart();\n      } else if (chartType === '3d') {\n        render3DChart();\n      }\n    }\n    return () => clearChart();\n  }, [xAxis, yAxis, chartType, data]);\n\n  // Download PNG for 2D canvas\n  const downloadPNG = () => {\n    if (chartType === '2d' && chartRef.current) {\n      const url = chartRef.current.toDataURL('image/png');\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = 'chart.png';\n      link.click();\n    } else {\n      alert('PNG download is supported only for 2D charts.');\n    }\n  };\n\n  // Download PDF for 2D canvas using jsPDF\n  const downloadPDF = () => {\n    import('jspdf').then(jsPDFModule => {\n      const jsPDF = jsPDFModule.default;\n      const pdf = new jsPDF();\n      if (chartType === '2d' && chartRef.current) {\n        const imgData = chartRef.current.toDataURL('image/png');\n        pdf.addImage(imgData, 'PNG', 10, 10, 180, 100);\n        pdf.save('chart.pdf');\n      } else {\n        alert('PDF download is supported only for 2D charts.');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-6xl mx-auto bg-white shadow rounded p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-2xl font-semibold mb-6 text-gray-800\",\n      children: \"Visualize Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-3 gap-6 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"xAxis\",\n          className: \"block text-gray-700 font-medium mb-1\",\n          children: \"X Axis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"xAxis\",\n          value: xAxis,\n          onChange: e => setXAxis(e.target.value),\n          className: \"w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select column\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), columns.map(col => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: col,\n            children: col\n          }, col, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"yAxis\",\n          className: \"block text-gray-700 font-medium mb-1\",\n          children: \"Y Axis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"yAxis\",\n          value: yAxis,\n          onChange: e => setYAxis(e.target.value),\n          className: \"w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select column\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), columns.map(col => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: col,\n            children: col\n          }, col, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"chartType\",\n          className: \"block text-gray-700 font-medium mb-1\",\n          children: \"Chart Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"chartType\",\n          value: chartType,\n          onChange: e => setChartType(e.target.value),\n          className: \"w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2d\",\n            children: \"2D (Chart.js)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"3d\",\n            children: \"3D (Three.js)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), chartType === '2d' && /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef,\n      width: \"600\",\n      height: \"400\",\n      className: \"border border-gray-300 rounded shadow-sm mx-auto block\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this), chartType === '3d' && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: threeRef,\n      className: \"border border-gray-300 rounded shadow-sm mx-auto block\",\n      style: {\n        width: '600px',\n        height: '400px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 flex justify-center space-x-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: downloadPNG,\n        className: \"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition\",\n        children: \"Download PNG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: downloadPDF,\n        className: \"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 transition\",\n        children: \"Download PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n}\n_s(ChartVisualizer, \"OU/pkvonR4U/xYbdFcgpJPS3Dr4=\");\n_c = ChartVisualizer;\nexport default ChartVisualizer;\nvar _c;\n$RefreshReg$(_c, \"ChartVisualizer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Chart","THREE","jsxDEV","_jsxDEV","ChartVisualizer","data","_s","xAxis","setXAxis","yAxis","setYAxis","chartType","setChartType","chartRef","threeRef","chartInstance","threeScene","columns","length","Object","keys","clearChart","current","destroy","firstChild","removeChild","renderer","dispose","render2DChart","ctx","getContext","type","labels","map","d","datasets","label","borderColor","backgroundColor","fill","tension","options","responsive","interaction","mode","intersect","plugins","legend","display","tooltip","enabled","scales","x","title","text","y","render3DChart","mount","width","clientWidth","height","clientHeight","scene","Scene","background","Color","camera","PerspectiveCamera","position","z","WebGLRenderer","antialias","alpha","setSize","appendChild","domElement","forEach","point","parseFloat","isNaN","geometry","SphereGeometry","material","MeshStandardMaterial","color","sphere","Mesh","set","add","light","DirectionalLight","animate","requestAnimationFrame","render","downloadPNG","url","toDataURL","link","document","createElement","href","download","click","alert","downloadPDF","then","jsPDFModule","jsPDF","default","pdf","imgData","addImage","save","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","col","ref","style","onClick","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/Desktop/excel/client/src/components/ChartVisualizer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Chart from 'chart.js/auto';\r\nimport * as THREE from 'three';\r\n\r\nfunction ChartVisualizer({ data }) {\r\n  const [xAxis, setXAxis] = useState('');\r\n  const [yAxis, setYAxis] = useState('');\r\n  const [chartType, setChartType] = useState('2d');\r\n  const chartRef = useRef(null);\r\n  const threeRef = useRef(null);\r\n  const chartInstance = useRef(null);\r\n  const threeScene = useRef(null);\r\n\r\n  const columns = data.length ? Object.keys(data[0]) : [];\r\n\r\n  // Clean up function to remove existing charts\r\n  const clearChart = () => {\r\n    if (chartInstance.current) {\r\n      chartInstance.current.destroy();\r\n      chartInstance.current = null;\r\n    }\r\n    if (threeScene.current) {\r\n      // Remove canvas for Three.js scene\r\n      if (threeRef.current) {\r\n        while (threeRef.current.firstChild) {\r\n          threeRef.current.removeChild(threeRef.current.firstChild);\r\n        }\r\n      }\r\n\r\n      // Dispose Three.js objects\r\n      if (threeScene.current.renderer) {\r\n        threeScene.current.renderer.dispose();\r\n      }\r\n      threeScene.current = null;\r\n    }\r\n  };\r\n\r\n  // Create 2D Chart.js chart\r\n  const render2DChart = () => {\r\n    if (!chartRef.current) return;\r\n    const ctx = chartRef.current.getContext('2d');\r\n    chartInstance.current = new Chart(ctx, {\r\n      type: 'line',\r\n      data: {\r\n        labels: data.map(d => d[xAxis]),\r\n        datasets: [\r\n          {\r\n            label: `${yAxis} vs ${xAxis}`,\r\n            data: data.map(d => d[yAxis]),\r\n            borderColor: 'rgba(37, 99, 235, 1)', // Tailwind blue-600\r\n            backgroundColor: 'rgba(37, 99, 235, 0.2)',\r\n            fill: true,\r\n            tension: 0.3,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        interaction: {\r\n          mode: 'index',\r\n          intersect: false,\r\n        },\r\n        plugins: {\r\n          legend: { display: true },\r\n          tooltip: { enabled: true },\r\n        },\r\n        scales: {\r\n          x: { title: { display: true, text: xAxis } },\r\n          y: { title: { display: true, text: yAxis } },\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  // Create basic 3D scatter plot with Three.js\r\n  const render3DChart = () => {\r\n    if (!threeRef.current) return;\r\n\r\n    const mount = threeRef.current;\r\n    const width = mount.clientWidth || 600;\r\n    const height = mount.clientHeight || 400;\r\n\r\n    // Scene & camera\r\n    const scene = new THREE.Scene();\r\n    scene.background = new THREE.Color(0xf9fafb); // Tailwind gray-50\r\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\r\n    camera.position.z = 50;\r\n\r\n    // Renderer\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\r\n    renderer.setSize(width, height);\r\n    mount.appendChild(renderer.domElement);\r\n\r\n    // Add points as spheres\r\n    data.forEach(point => {\r\n      const x = parseFloat(point[xAxis]);\r\n      const y = parseFloat(point[yAxis]);\r\n      if (isNaN(x) || isNaN(y)) return;\r\n\r\n      const geometry = new THREE.SphereGeometry(0.5, 8, 8);\r\n      const material = new THREE.MeshStandardMaterial({ color: 0x2563eb }); // Tailwind blue-600\r\n      const sphere = new THREE.Mesh(geometry, material);\r\n      sphere.position.set(x, y, 0);\r\n      scene.add(sphere);\r\n    });\r\n\r\n    // Add light\r\n    const light = new THREE.DirectionalLight(0xffffff, 1);\r\n    light.position.set(10, 10, 10);\r\n    scene.add(light);\r\n\r\n    // Animate loop\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      renderer.render(scene, camera);\r\n    };\r\n    animate();\r\n\r\n    // Save for cleanup\r\n    threeScene.current = { scene, camera, renderer };\r\n  };\r\n\r\n  // Effect to rerender charts on input change\r\n  useEffect(() => {\r\n    clearChart();\r\n    if (xAxis && yAxis) {\r\n      if (chartType === '2d') {\r\n        render2DChart();\r\n      } else if (chartType === '3d') {\r\n        render3DChart();\r\n      }\r\n    }\r\n    return () => clearChart();\r\n  }, [xAxis, yAxis, chartType, data]);\r\n\r\n  // Download PNG for 2D canvas\r\n  const downloadPNG = () => {\r\n    if (chartType === '2d' && chartRef.current) {\r\n      const url = chartRef.current.toDataURL('image/png');\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = 'chart.png';\r\n      link.click();\r\n    } else {\r\n      alert('PNG download is supported only for 2D charts.');\r\n    }\r\n  };\r\n\r\n  // Download PDF for 2D canvas using jsPDF\r\n  const downloadPDF = () => {\r\n    import('jspdf').then(jsPDFModule => {\r\n      const jsPDF = jsPDFModule.default;\r\n      const pdf = new jsPDF();\r\n      if (chartType === '2d' && chartRef.current) {\r\n        const imgData = chartRef.current.toDataURL('image/png');\r\n        pdf.addImage(imgData, 'PNG', 10, 10, 180, 100);\r\n        pdf.save('chart.pdf');\r\n      } else {\r\n        alert('PDF download is supported only for 2D charts.');\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-6xl mx-auto bg-white shadow rounded p-6\">\r\n      <h3 className=\"text-2xl font-semibold mb-6 text-gray-800\">Visualize Data</h3>\r\n\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-6 mb-6\">\r\n        {/* X Axis selector */}\r\n        <div>\r\n          <label htmlFor=\"xAxis\" className=\"block text-gray-700 font-medium mb-1\">\r\n            X Axis\r\n          </label>\r\n          <select\r\n            id=\"xAxis\"\r\n            value={xAxis}\r\n            onChange={e => setXAxis(e.target.value)}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n          >\r\n            <option value=\"\">Select column</option>\r\n            {columns.map(col => (\r\n              <option key={col} value={col}>\r\n                {col}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        {/* Y Axis selector */}\r\n        <div>\r\n          <label htmlFor=\"yAxis\" className=\"block text-gray-700 font-medium mb-1\">\r\n            Y Axis\r\n          </label>\r\n          <select\r\n            id=\"yAxis\"\r\n            value={yAxis}\r\n            onChange={e => setYAxis(e.target.value)}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n          >\r\n            <option value=\"\">Select column</option>\r\n            {columns.map(col => (\r\n              <option key={col} value={col}>\r\n                {col}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        {/* Chart Type selector */}\r\n        <div>\r\n          <label htmlFor=\"chartType\" className=\"block text-gray-700 font-medium mb-1\">\r\n            Chart Type\r\n          </label>\r\n          <select\r\n            id=\"chartType\"\r\n            value={chartType}\r\n            onChange={e => setChartType(e.target.value)}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n          >\r\n            <option value=\"2d\">2D (Chart.js)</option>\r\n            <option value=\"3d\">3D (Three.js)</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Chart display */}\r\n      {chartType === '2d' && (\r\n        <canvas\r\n          ref={chartRef}\r\n          width=\"600\"\r\n          height=\"400\"\r\n          className=\"border border-gray-300 rounded shadow-sm mx-auto block\"\r\n        />\r\n      )}\r\n\r\n      {chartType === '3d' && (\r\n        <div\r\n          ref={threeRef}\r\n          className=\"border border-gray-300 rounded shadow-sm mx-auto block\"\r\n          style={{ width: '600px', height: '400px' }}\r\n        />\r\n      )}\r\n\r\n      {/* Download buttons */}\r\n      <div className=\"mt-6 flex justify-center space-x-4\">\r\n        <button\r\n          onClick={downloadPNG}\r\n          className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition\"\r\n        >\r\n          Download PNG\r\n        </button>\r\n        <button\r\n          onClick={downloadPDF}\r\n          className=\"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 transition\"\r\n        >\r\n          Download PDF\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChartVisualizer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}